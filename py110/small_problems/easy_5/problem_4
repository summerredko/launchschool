# Write a function that takes a string as an argument and returns a list 
# that contains every word from the string, 
# with each word followed by a space and the word's length. 
# If the argument is an empty string or if no argument is passed, 
# the function should return an empty list.

# Input: string
# Output: list

# Data Structures:
#   list

# Algorithm
#   Take a string as an argument.
#   Loop over the string.
#   Find the length of the word
#   Append the word to list
#   Return list

def word_lengths(string=''):
    # string_list = string.split()
    # result = []
    # for word in string_list:
    #     new_word = word + " " + str(len(word))
    #     result.append(new_word)
    #     if string == '':
    #         return []
    # return result
    if not string:
        return []
    return [f'{word} {len(word)}' for word in string.split()]



# All of these examples should print True
words = 'cow sheep chicken'
expected_result = ['cow 3', 'sheep 5', 'chicken 7']
print(word_lengths(words) == expected_result)        # True

words = 'baseball hot dogs and apple pie'
expected_result = ['baseball 8', 'hot 3', 'dogs 4',
                   'and 3', 'apple 5', 'pie 3']
print(word_lengths(words) == expected_result)        # True

words = "It ain't easy, is it?"
expected_result = ['It 2', "ain't 5", 'easy, 5',
                   'is 2', 'it? 3']
print(word_lengths(words) == expected_result)        # True

big_word = 'Supercalifragilisticexpialidocious'
print(word_lengths(big_word) == [f'{big_word} 34'])  # True

print(word_lengths('') == [])                        # True
print(word_lengths() == [])                          # True
