# Given a sequence of integers, filter out instances where the same value occurs successively, 
# retaining only the initial occurrence. 
# Return the refined sequence.

# Input: list
# Output: list

# Algorithm:
#   Take a list of digits as an argument
#   Loop over that list
#   Extract if digit is not unique
#   Return list

import pdb 

def unique_sequence(digits):
    # digit_dict = {}

    # for digit in digits:
    #     if digit not in digit_dict:
    #         digit_dict[digit] = 1
    
    # return list(digit_dict)
    pdb.set_trace() 
    return list(dict.fromkeys(digits))




original = [1, 1, 2, 6, 6, 6, 5, 5, 3, 3, 3, 4]
expected = [1, 2, 6, 5, 3, 4]
print(unique_sequence(original) == expected)      # True
print(unique_sequence(original))
