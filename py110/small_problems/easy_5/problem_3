# Write a function that takes a list of strings and returns a list of the same string values, 
# but with all vowels (a, e, i, o, u) removed.

# Input: list
# Output: list

# Data Structures:
#   Take a list as an argument.
#   Loop over that list elements and then loop over string characters
#   If vowel is found delete that character
#   Return list

# def strip_vowels(word):
#     vowels = "aeiouAEIOU"
#     no_vowels = [char for char in word if char not in vowels]
#     return ''.join(no_vowels)

VOWELS = "aeiou"

def remove_vowels(lst):
    no_vowels_list = []
    for word in lst:
        cleaned_string = ''
        for char in word:
            if char.casefold() not in VOWELS:
                cleaned_string += char
        no_vowels_list.append(cleaned_string)
    return no_vowels_list
    # return [strip_vowels(word) for word in lst]


# All of these examples should print True
original = ['abcdefghijklmnopqrstuvwxyz']
expected = ['bcdfghjklmnpqrstvwxyz']
print(remove_vowels(original) == expected)        # True


original = ['green', 'YELLOW', 'black', 'white']
expected = ['grn', 'YLLW', 'blck', 'wht']
print(remove_vowels(original) == expected)        # True



original = ['ABC', 'AEIOU', 'XYZ']
expected = ['BC', '', 'XYZ']
print(remove_vowels(original) == expected)        # True
