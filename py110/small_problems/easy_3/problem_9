# Input: list
# Output: list

# Rules:
# Explicit:	
# 	Reverse a list in place without using reverse or slicing 			methods

# Implicit: 
	
# Questions:
	
# Data Structures:
# 	list
		
# Algorithm:
# 	Loop through the list.
# 	Access the indices of the list.
# 	Reassign elements to opposite index positions


# def reverse_list(lst):
#     n = len(lst)
#     for idx in range(n // 2):
#         lst[idx], lst[-(idx + 1)] = lst[-(idx + 1)], lst[idx]

#     return lst


def reverse_list(lst):
    for i in range(len(lst)):
        lst.insert(i, lst.pop())
    return lst


list1 = [1, 2, 3, 4]
result = reverse_list(list1)
print(result == [4, 3, 2, 1])               # True
print(list1 is result)                      # True

list2 = ["a", "b", "c", "d", "e"]
result2 = reverse_list(list2)
print(result2 == ['e', 'd', 'c', 'b', 'a']) # True
print(list2 is result2)                     # True

list3 = ["abc"]
result3 = reverse_list(list3)
print(result3 == ['abc'])                   # True
print(list3 is result3)                     # True

list4 = []
result4 = reverse_list(list4)
print(result4 == [])                        # True
print(list4 is result4)                     # True
