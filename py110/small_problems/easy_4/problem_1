# Write a function that takes a list of integers between 0 and 19 
# and returns a list of those integers sorted based on the English word for each number

# P: Sort a list of integers based on the English spelling of that number

# E: 
# Input: List
# Output: List
# Rules: Numbers are between 0 and 19

# D: List

# A: 
# 	Take in a list as an argument.
#   Iterate over that list
# 	Match each integers to its word. (helper function)
# 	Add to new list
# 	Sort lexiconically
# 	Return new list

input_list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
              10, 11, 12, 13, 14, 15, 16, 17, 18, 19]

expected_result = [8, 18, 11, 15, 5, 4, 14, 9, 19, 1,
                   7, 17, 6, 16, 10, 13, 3, 12, 2, 0]

dict = {
    0: "zero",
    1: "one",
    2: "two",
    3: "three",
    4: "four",
    5: "five",
    6: "six",
    7: "seven",
    8: "eight",
    9: "nine",
    10: "ten",
    11: "eleven",
    12: "twelve",
    13: "thirteen",
    14: "fourteen",
    15: "fifteen",
    16: "sixteen",
    17: "seventeen",
    18: "eighteen",
    19: "nineteen",
}

# Helper function
def match_num(lst):
    # lexicon = []
    # for n in lst:
    #     if n in dict:
    #         lexicon.append(dict[n])
    # return sorted(lexicon)
    return sorted([dict[n] for n in lst if n in dict])

# Main function
def alphabetic_number_sort(input_list):
    word_list = match_num(input_list)
    # output_list = []
    # for word in word_list:
    #     for key, value in dict.items():  # Loop through key-value pairs
    #         if word == value:  # Check if the value matches
    #             output_list.append(key)
    # return output_list
    return [key for word in word_list for key, value in dict.items() if word == value]

print(alphabetic_number_sort(input_list) == expected_result)
# Prints True
